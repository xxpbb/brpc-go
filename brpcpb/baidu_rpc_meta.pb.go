// Licensed to the Apache Software Foundation (ASF) under one
// or more contributor license agreements.  See the NOTICE file
// distributed with this work for additional information
// regarding copyright ownership.  The ASF licenses this file
// to you under the Apache License, Version 2.0 (the
// "License"); you may not use this file except in compliance
// with the License.  You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: baidu_rpc_meta.proto

package brpcpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RpcMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Request            *RpcRequestMeta  `protobuf:"bytes,1,opt,name=request" json:"request,omitempty"`
	Response           *RpcResponseMeta `protobuf:"bytes,2,opt,name=response" json:"response,omitempty"`
	CompressType       *int32           `protobuf:"varint,3,opt,name=compress_type,json=compressType" json:"compress_type,omitempty"`
	CorrelationId      *int64           `protobuf:"varint,4,opt,name=correlation_id,json=correlationId" json:"correlation_id,omitempty"`
	AttachmentSize     *int32           `protobuf:"varint,5,opt,name=attachment_size,json=attachmentSize" json:"attachment_size,omitempty"`
	ChunkInfo          *ChunkInfo       `protobuf:"bytes,6,opt,name=chunk_info,json=chunkInfo" json:"chunk_info,omitempty"`
	AuthenticationData []byte           `protobuf:"bytes,7,opt,name=authentication_data,json=authenticationData" json:"authentication_data,omitempty"`
	StreamSettings     *StreamSettings  `protobuf:"bytes,8,opt,name=stream_settings,json=streamSettings" json:"stream_settings,omitempty"`
}

func (x *RpcMeta) Reset() {
	*x = RpcMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_baidu_rpc_meta_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RpcMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcMeta) ProtoMessage() {}

func (x *RpcMeta) ProtoReflect() protoreflect.Message {
	mi := &file_baidu_rpc_meta_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcMeta.ProtoReflect.Descriptor instead.
func (*RpcMeta) Descriptor() ([]byte, []int) {
	return file_baidu_rpc_meta_proto_rawDescGZIP(), []int{0}
}

func (x *RpcMeta) GetRequest() *RpcRequestMeta {
	if x != nil {
		return x.Request
	}
	return nil
}

func (x *RpcMeta) GetResponse() *RpcResponseMeta {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *RpcMeta) GetCompressType() int32 {
	if x != nil && x.CompressType != nil {
		return *x.CompressType
	}
	return 0
}

func (x *RpcMeta) GetCorrelationId() int64 {
	if x != nil && x.CorrelationId != nil {
		return *x.CorrelationId
	}
	return 0
}

func (x *RpcMeta) GetAttachmentSize() int32 {
	if x != nil && x.AttachmentSize != nil {
		return *x.AttachmentSize
	}
	return 0
}

func (x *RpcMeta) GetChunkInfo() *ChunkInfo {
	if x != nil {
		return x.ChunkInfo
	}
	return nil
}

func (x *RpcMeta) GetAuthenticationData() []byte {
	if x != nil {
		return x.AuthenticationData
	}
	return nil
}

func (x *RpcMeta) GetStreamSettings() *StreamSettings {
	if x != nil {
		return x.StreamSettings
	}
	return nil
}

type RpcRequestMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceName  *string `protobuf:"bytes,1,req,name=service_name,json=serviceName" json:"service_name,omitempty"`
	MethodName   *string `protobuf:"bytes,2,req,name=method_name,json=methodName" json:"method_name,omitempty"`
	LogId        *int64  `protobuf:"varint,3,opt,name=log_id,json=logId" json:"log_id,omitempty"`
	TraceId      *int64  `protobuf:"varint,4,opt,name=trace_id,json=traceId" json:"trace_id,omitempty"`
	SpanId       *int64  `protobuf:"varint,5,opt,name=span_id,json=spanId" json:"span_id,omitempty"`
	ParentSpanId *int64  `protobuf:"varint,6,opt,name=parent_span_id,json=parentSpanId" json:"parent_span_id,omitempty"`
	RequestId    *string `protobuf:"bytes,7,opt,name=request_id,json=requestId" json:"request_id,omitempty"`  // correspond to x-request-id in http header
	TimeoutMs    *int32  `protobuf:"varint,8,opt,name=timeout_ms,json=timeoutMs" json:"timeout_ms,omitempty"` // client's timeout setting for current call
}

func (x *RpcRequestMeta) Reset() {
	*x = RpcRequestMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_baidu_rpc_meta_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RpcRequestMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcRequestMeta) ProtoMessage() {}

func (x *RpcRequestMeta) ProtoReflect() protoreflect.Message {
	mi := &file_baidu_rpc_meta_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcRequestMeta.ProtoReflect.Descriptor instead.
func (*RpcRequestMeta) Descriptor() ([]byte, []int) {
	return file_baidu_rpc_meta_proto_rawDescGZIP(), []int{1}
}

func (x *RpcRequestMeta) GetServiceName() string {
	if x != nil && x.ServiceName != nil {
		return *x.ServiceName
	}
	return ""
}

func (x *RpcRequestMeta) GetMethodName() string {
	if x != nil && x.MethodName != nil {
		return *x.MethodName
	}
	return ""
}

func (x *RpcRequestMeta) GetLogId() int64 {
	if x != nil && x.LogId != nil {
		return *x.LogId
	}
	return 0
}

func (x *RpcRequestMeta) GetTraceId() int64 {
	if x != nil && x.TraceId != nil {
		return *x.TraceId
	}
	return 0
}

func (x *RpcRequestMeta) GetSpanId() int64 {
	if x != nil && x.SpanId != nil {
		return *x.SpanId
	}
	return 0
}

func (x *RpcRequestMeta) GetParentSpanId() int64 {
	if x != nil && x.ParentSpanId != nil {
		return *x.ParentSpanId
	}
	return 0
}

func (x *RpcRequestMeta) GetRequestId() string {
	if x != nil && x.RequestId != nil {
		return *x.RequestId
	}
	return ""
}

func (x *RpcRequestMeta) GetTimeoutMs() int32 {
	if x != nil && x.TimeoutMs != nil {
		return *x.TimeoutMs
	}
	return 0
}

type RpcResponseMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCode *int32  `protobuf:"varint,1,opt,name=error_code,json=errorCode" json:"error_code,omitempty"`
	ErrorText *string `protobuf:"bytes,2,opt,name=error_text,json=errorText" json:"error_text,omitempty"`
}

func (x *RpcResponseMeta) Reset() {
	*x = RpcResponseMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_baidu_rpc_meta_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RpcResponseMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcResponseMeta) ProtoMessage() {}

func (x *RpcResponseMeta) ProtoReflect() protoreflect.Message {
	mi := &file_baidu_rpc_meta_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcResponseMeta.ProtoReflect.Descriptor instead.
func (*RpcResponseMeta) Descriptor() ([]byte, []int) {
	return file_baidu_rpc_meta_proto_rawDescGZIP(), []int{2}
}

func (x *RpcResponseMeta) GetErrorCode() int32 {
	if x != nil && x.ErrorCode != nil {
		return *x.ErrorCode
	}
	return 0
}

func (x *RpcResponseMeta) GetErrorText() string {
	if x != nil && x.ErrorText != nil {
		return *x.ErrorText
	}
	return ""
}

var File_baidu_rpc_meta_proto protoreflect.FileDescriptor

var file_baidu_rpc_meta_proto_rawDesc = []byte{
	0x0a, 0x14, 0x62, 0x61, 0x69, 0x64, 0x75, 0x5f, 0x72, 0x70, 0x63, 0x5f, 0x6d, 0x65, 0x74, 0x61,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x62, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x1a, 0x0d, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x18, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x70,
	0x63, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8f, 0x03, 0x0a,
	0x07, 0x52, 0x70, 0x63, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x35, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x62, 0x72, 0x70, 0x63,
	0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x52, 0x70, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x38, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x62, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e,
	0x52, 0x70, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x52,
	0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6d,
	0x70, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x25,
	0x0a, 0x0e, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e,
	0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x2e,
	0x0a, 0x0a, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x62, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x09, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2f,
	0x0a, 0x13, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x12, 0x61, 0x75, 0x74,
	0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x3d, 0x0a, 0x0f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x62, 0x72, 0x70, 0x63, 0x2e,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x0e,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x22, 0x83,
	0x02, 0x0a, 0x0e, 0x52, 0x70, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x74,
	0x61, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x6c, 0x6f, 0x67, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x6f, 0x67, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08,
	0x74, 0x72, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x74, 0x72, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x70, 0x61, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x70, 0x61, 0x6e, 0x49, 0x64,
	0x12, 0x24, 0x0a, 0x0e, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x70, 0x61, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x53, 0x70, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74,
	0x5f, 0x6d, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x6f,
	0x75, 0x74, 0x4d, 0x73, 0x22, 0x4f, 0x0a, 0x0f, 0x52, 0x70, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f,
	0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x54, 0x65, 0x78, 0x74, 0x42, 0x48, 0x0a, 0x0f, 0x63, 0x6f, 0x6d, 0x2e, 0x62, 0x72, 0x70,
	0x63, 0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x42, 0x0d, 0x42, 0x61, 0x69, 0x64, 0x75, 0x52,
	0x70, 0x63, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x5a, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x78, 0x78, 0x70, 0x62, 0x62, 0x2f, 0x62, 0x72, 0x70, 0x63, 0x2d, 0x67,
	0x6f, 0x2f, 0x62, 0x72, 0x70, 0x63, 0x70, 0x62, 0x3b, 0x62, 0x72, 0x70, 0x63, 0x70, 0x62,
}

var (
	file_baidu_rpc_meta_proto_rawDescOnce sync.Once
	file_baidu_rpc_meta_proto_rawDescData = file_baidu_rpc_meta_proto_rawDesc
)

func file_baidu_rpc_meta_proto_rawDescGZIP() []byte {
	file_baidu_rpc_meta_proto_rawDescOnce.Do(func() {
		file_baidu_rpc_meta_proto_rawDescData = protoimpl.X.CompressGZIP(file_baidu_rpc_meta_proto_rawDescData)
	})
	return file_baidu_rpc_meta_proto_rawDescData
}

var file_baidu_rpc_meta_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_baidu_rpc_meta_proto_goTypes = []interface{}{
	(*RpcMeta)(nil),         // 0: brpc.policy.RpcMeta
	(*RpcRequestMeta)(nil),  // 1: brpc.policy.RpcRequestMeta
	(*RpcResponseMeta)(nil), // 2: brpc.policy.RpcResponseMeta
	(*ChunkInfo)(nil),       // 3: brpc.ChunkInfo
	(*StreamSettings)(nil),  // 4: brpc.StreamSettings
}
var file_baidu_rpc_meta_proto_depIdxs = []int32{
	1, // 0: brpc.policy.RpcMeta.request:type_name -> brpc.policy.RpcRequestMeta
	2, // 1: brpc.policy.RpcMeta.response:type_name -> brpc.policy.RpcResponseMeta
	3, // 2: brpc.policy.RpcMeta.chunk_info:type_name -> brpc.ChunkInfo
	4, // 3: brpc.policy.RpcMeta.stream_settings:type_name -> brpc.StreamSettings
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_baidu_rpc_meta_proto_init() }
func file_baidu_rpc_meta_proto_init() {
	if File_baidu_rpc_meta_proto != nil {
		return
	}
	file_options_proto_init()
	file_streaming_rpc_meta_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_baidu_rpc_meta_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RpcMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_baidu_rpc_meta_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RpcRequestMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_baidu_rpc_meta_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RpcResponseMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_baidu_rpc_meta_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_baidu_rpc_meta_proto_goTypes,
		DependencyIndexes: file_baidu_rpc_meta_proto_depIdxs,
		MessageInfos:      file_baidu_rpc_meta_proto_msgTypes,
	}.Build()
	File_baidu_rpc_meta_proto = out.File
	file_baidu_rpc_meta_proto_rawDesc = nil
	file_baidu_rpc_meta_proto_goTypes = nil
	file_baidu_rpc_meta_proto_depIdxs = nil
}
